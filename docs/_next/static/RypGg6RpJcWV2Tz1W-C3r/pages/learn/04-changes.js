(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{JcWD:function(e,a,n){"use strict";n.r(a);var t=n("qNsG"),o=n("q1tI"),i=n.n(o),p=n("6qfE"),s=i.a.createElement;a.default=function(e){var a=e.components;Object(t.a)(e,["components"]);return s(p.MDXTag,{name:"wrapper",components:a},s(p.MDXTag,{name:"h1",components:a},"Changes"),s(p.MDXTag,{name:"p",components:a},"Graffy uses graphs to represent several different things:"),s(p.MDXTag,{name:"ul",components:a},s(p.MDXTag,{name:"li",components:a,parentName:"ul"},s(p.MDXTag,{name:"p",components:a,parentName:"li"},'The conceptual "total" graph, containing ',s(p.MDXTag,{name:"em",components:a,parentName:"p"},"all")," the data in the system. Except for trivial applications, it isn't possible to materialize this graph in a single machine. For any possible path, this graph will have either a value or ",s(p.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"null")," if the path does not exist.")),s(p.MDXTag,{name:"li",components:a,parentName:"ul"},s(p.MDXTag,{name:"p",components:a,parentName:"li"},'A "cached" subgraph of the total graph which ',s(p.MDXTag,{name:"em",components:a,parentName:"p"},"is")," loaded on a single machine. Looking for a path in this graph may have one of three outcomes: A valid value, ",s(p.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"null")," if the path is known to not exist, or unknown if the path may exist in the total graph but this information isn't available in this cache.")),s(p.MDXTag,{name:"li",components:a,parentName:"ul"},s(p.MDXTag,{name:"p",components:a,parentName:"li"},'A "result" is the subgraph of the total graph matching a query. For every path in the original query, this graph will have a value or ',s(p.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"null"),". This is similar to a cached subgraph.")),s(p.MDXTag,{name:"li",components:a,parentName:"ul"},s(p.MDXTag,{name:"p",components:a,parentName:"li"},'A "change" is a subgraph encoding the new state of paths that have changed. This is either written to the store (as an argument to ',s(p.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"patch()"),"), or received from the store (in the stream returned by ",s(p.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"watch()"),")"))))}},VHuZ:function(e,a,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/learn/04-changes",function(){return n("JcWD")}])}},[["VHuZ",1,0]]]);